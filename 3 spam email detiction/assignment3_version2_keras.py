# -*- coding: utf-8 -*-
"""Assignment3_version2_keras.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Zkt4i_VvrMDqd5Hp-ax-cbekM15W0edb

Spam email classifier from scratch

1.import important libraries
"""

import numpy as np
import matplotlib as plt
import pandas as pd
import seaborn as sns
import tensorflow as tf
import keras
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score

pip install ucimlrepo

from ucimlrepo import fetch_ucirepo

# fetch dataset
spambase = fetch_ucirepo(id=94)

# data (as pandas dataframes)
X = spambase.data.features
Y = spambase.data.targets

# metadata
print(spambase.metadata)

# variable information
print(spambase.variables)

print(X)

print(Y)

X.head()

"""1 is spam email------ 0 is not spam email

Data Standarization
"""

scaler=StandardScaler()
standard_data=scaler.fit_transform(X)

print(standard_data)

X=standard_data
print(X)

print(Y)

"""split data into train & test"""

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=2)

print(X.shape,X_train.shape,X_test.shape,Y_train.shape)

"""create our model"""

model = keras.Sequential()
model.add(keras.layers.Dense(57, input_shape=(57,)))
model.add(keras.layers.Dense(1, input_shape=(1,), activation = "sigmoid"))

"""compile model"""

model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics=['acc'])

"""fit model"""

history = model.fit(X_train,Y_train, epochs=100, batch_size=32, validation_split = 0.2)

"""prediction"""

pred = model.evaluate(X_test, Y_test)
print('Test score:', pred[0])
print('Test accuracy:', pred[1])