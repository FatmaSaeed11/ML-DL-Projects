# -*- coding: utf-8 -*-
"""Assignment_6_keras.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rEvhMYA2Bxh0gmz0-UMZQiuhYW1r3JX3

deep neural network classification

import important libraries
"""

import numpy as np
import matplotlib as plt
import pandas as pd
import tensorflow as tf
import math

from tensorflow import keras
from keras.utils import normalize,to_categorical
from tensorflow.keras.layers import Flatten,Dense
from sklearn.model_selection import train_test_split

from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score,classification_report

"""load dataset"""

x_train=pd.read_csv('/content/optdigits.tra')

"""split dataset"""

x=x_train.iloc[:,:-1].values
y=x_train.iloc[:,-1].values

"""one hot encoding"""

y_train=to_categorical(y)

print(y)

print(y_train)

"""train test split"""

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

"""to catigorical to convert class to binary class"""

nb_classes = 10

y_train = to_categorical(y_train, nb_classes)
y_test = to_categorical(y_test, nb_classes)

"""build our model"""

model = tf.keras.Sequential()
model.add(Dense(128, input_shape=(64,), activation='relu'))
model.add(Dense(128, activation='relu'))
model.add(Dense(128, activation='relu'))
model.add(Dense(10, activation = "softmax"))
opt = tf.keras.optimizers.Adam(learning_rate=1e-2)

"""compile model"""

model.compile(optimizer = opt, loss = 'categorical_crossentropy', metrics=['acc'])

"""fit model"""

history = model.fit(x_train,y_train, epochs=50, batch_size=128, validation_split = 0.2)

"""Accuracy"""

loss,accuracy=model.evaluate(x_train,y_train)
print('model_loss=%.2f,model_accuracy=%.2f' % (loss*100,accuracy*100))

loss,accuracy=model.evaluate(x_test,y_test)

print('model_loss=%.2f,model_accuracy=%.2f' % (loss*100,accuracy*100))