# -*- coding: utf-8 -*-
"""Assignment 4 _keras_final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17ScRPtHqgoR06yME1qg4IAYL8aUIC82R

optical character recognation with keras
"""

import numpy as np
import matplotlib as plt
import pandas as pd
import tensorflow as tf
import math
from keras.utils import normalize
from tensorflow.keras.layers import Flatten,Dense
from sklearn.model_selection import train_test_split

from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score,classification_report

"""load dataset"""

data_train=pd.read_csv('/content/optdigits.tra')

data_test=pd.read_csv('/content/optdigits.tes')

"""split dataset"""

x_train=data_train.iloc[:,:-1]
y_train=data_train.iloc[:,-1]
x_test=data_test.iloc[:,:-1]
y_test=data_test.iloc[:,-1]

print(x_train)

print(y_train)

print('train shape : ',x_train.shape)
print('test shape : ',x_test.shape)

"""data normalization"""

x_train=normalize(x_train,axis=1)
x_test=normalize(x_test,axis=1)

"""create our model"""

model=tf.keras.Sequential()
model.add(Dense(10,activation='softmax'))

"""compile model"""

model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['acc'])

"""fit model"""

history = model.fit(x_train,y_train, epochs=200, batch_size=32)

"""print total loss and accuracy for train"""

loss,accuracy=model.evaluate(x_train,y_train)
print('model_loss=%.2f,model_accuracy=%.2f' % (loss*100,accuracy*100))

"""print total loss and accuracy for test"""

loss,accuracy=model.evaluate(x_test,y_test)

print('model_loss=%.2f,model_accuracy=%.2f' % (loss*100,accuracy*100))